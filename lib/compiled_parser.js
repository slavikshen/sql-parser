/* parser generated by jison 0.4.15 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var parser = (function(){
var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[5,27],$V2=[1,15],$V3=[1,13],$V4=[1,14],$V5=[5,27,32,43,46],$V6=[1,18],$V7=[5,27,32,43,46,48,65],$V8=[1,30],$V9=[1,32],$Va=[1,42],$Vb=[1,46],$Vc=[1,47],$Vd=[1,43],$Ve=[1,44],$Vf=[1,41],$Vg=[1,45],$Vh=[1,28],$Vi=[5,27,32],$Vj=[5,27,32,43,46,48],$Vk=[1,60],$Vl=[18,44],$Vm=[1,66],$Vn=[1,67],$Vo=[1,68],$Vp=[1,69],$Vq=[1,70],$Vr=[5,18,24,27,32,35,38,39,42,43,44,46,48,65,67,68,69,70,71,73],$Vs=[5,18,24,27,32,35,38,39,42,43,44,45,46,48,54,65,67,68,69,70,71,73,74],$Vt=[1,76],$Vu=[2,90],$Vv=[1,90],$Vw=[1,91],$Vx=[1,111],$Vy=[5,27,32,43,44,45,46],$Vz=[1,119],$VA=[5,27,32,43,44,46,48,67],$VB=[5,27,32,42,43,46,48,65],$VC=[1,122],$VD=[1,123],$VE=[1,124],$VF=[5,27,32,35,36,38,39,42,43,46,48,65],$VG=[5,18,24,27,32,35,38,39,42,43,44,46,48,65,67,73],$VH=[5,27,32,35,38,39,42,43,46,48,65],$VI=[5,27,32,43,46,59,61];
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Root":3,"Query":4,"EOF":5,"SelectQuery":6,"Unions":7,"SelectWithLimitQuery":8,"BasicSelectQuery":9,"Select":10,"OrderClause":11,"GroupClause":12,"LimitClause":13,"SelectClause":14,"WhereClause":15,"SELECT":16,"Fields":17,"FROM":18,"Table":19,"DISTINCT":20,"Joins":21,"Top":22,"Literal":23,"AS":24,"LEFT_PAREN":25,"List":26,"RIGHT_PAREN":27,"WINDOW":28,"WINDOW_FUNCTION":29,"Number":30,"Union":31,"UNION":32,"ALL":33,"Join":34,"JOIN":35,"ON":36,"Expression":37,"LEFT":38,"RIGHT":39,"INNER":40,"OUTER":41,"WHERE":42,"LIMIT":43,"SEPARATOR":44,"OFFSET":45,"SAMPLE":46,"TOP":47,"ORDER":48,"BY":49,"OrderArgs":50,"OffsetClause":51,"OrderArg":52,"Value":53,"DIRECTION":54,"OffsetRows":55,"FetchClause":56,"ROW":57,"ROWS":58,"FETCH":59,"FIRST":60,"ONLY":61,"NEXT":62,"GroupBasicClause":63,"HavingClause":64,"GROUP":65,"ArgumentList":66,"HAVING":67,"MATH":68,"MATH_MULTI":69,"OPERATOR":70,"BETWEEN":71,"BetweenExpression":72,"CONDITIONAL":73,"SUB_SELECT_OP":74,"SubSelectExpression":75,"SUB_SELECT_UNARY_OP":76,"String":77,"Function":78,"UserFunction":79,"Boolean":80,"Parameter":81,"NUMBER":82,"BOOLEAN":83,"PARAMETER":84,"STRING":85,"DBLSTRING":86,"LITERAL":87,"DOT":88,"FUNCTION":89,"AggregateArgumentList":90,"Field":91,"STAR":92,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",16:"SELECT",18:"FROM",20:"DISTINCT",24:"AS",25:"LEFT_PAREN",27:"RIGHT_PAREN",28:"WINDOW",29:"WINDOW_FUNCTION",32:"UNION",33:"ALL",35:"JOIN",36:"ON",38:"LEFT",39:"RIGHT",40:"INNER",41:"OUTER",42:"WHERE",43:"LIMIT",44:"SEPARATOR",45:"OFFSET",46:"SAMPLE",47:"TOP",48:"ORDER",49:"BY",54:"DIRECTION",57:"ROW",58:"ROWS",59:"FETCH",60:"FIRST",61:"ONLY",62:"NEXT",65:"GROUP",67:"HAVING",68:"MATH",69:"MATH_MULTI",70:"OPERATOR",71:"BETWEEN",73:"CONDITIONAL",74:"SUB_SELECT_OP",76:"SUB_SELECT_UNARY_OP",82:"NUMBER",83:"BOOLEAN",84:"PARAMETER",85:"STRING",86:"DBLSTRING",87:"LITERAL",88:"DOT",89:"FUNCTION",92:"STAR"},
productions_: [0,[3,2],[4,1],[4,2],[6,1],[6,1],[9,1],[9,2],[9,2],[9,3],[8,2],[10,1],[10,2],[14,4],[14,5],[14,5],[14,6],[14,5],[14,5],[14,6],[14,6],[14,7],[19,1],[19,2],[19,3],[19,3],[19,3],[19,4],[19,6],[7,1],[7,2],[31,2],[31,3],[21,1],[21,2],[34,4],[34,5],[34,5],[34,6],[34,6],[34,6],[34,6],[15,2],[13,2],[13,4],[13,4],[13,2],[22,2],[11,3],[11,4],[50,1],[50,3],[52,1],[52,2],[51,2],[51,3],[55,2],[55,2],[56,4],[56,4],[12,1],[12,2],[63,3],[64,2],[37,3],[37,3],[37,3],[37,3],[37,3],[37,3],[37,5],[37,3],[37,2],[37,1],[37,1],[72,3],[75,3],[53,1],[53,1],[53,1],[53,1],[53,1],[53,1],[53,1],[26,1],[30,1],[80,1],[81,1],[77,1],[77,1],[23,1],[23,3],[78,4],[79,3],[79,4],[90,1],[90,2],[66,1],[66,3],[17,1],[17,3],[91,1],[91,1],[91,3]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:
return this.$ = $$[$0-1];
break;
case 2: case 4: case 5: case 6: case 11: case 60: case 73: case 74: case 77: case 78: case 79: case 80: case 81: case 82: case 83:
this.$ = $$[$0];
break;
case 3:
this.$ = (function () {
        $$[$0-1].unions = $$[$0];
        return $$[$0-1];
      }());
break;
case 7:
this.$ = (function () {
        $$[$0-1].order = $$[$0];
        return $$[$0-1];
      }());
break;
case 8:
this.$ = (function () {
        $$[$0-1].group = $$[$0];
        return $$[$0-1];
      }());
break;
case 9:
this.$ = (function () {
        $$[$0-2].group = $$[$0-1];
        $$[$0-2].order = $$[$0];
        return $$[$0-2];
      }());
break;
case 10:
this.$ = (function () {
        $$[$0-1].limit = $$[$0];
        return $$[$0-1];
      }());
break;
case 12:
this.$ = (function () {
        $$[$0-1].where = $$[$0];
        return $$[$0-1];
      }());
break;
case 13: case 18:
this.$ = new yy.Select(null, $$[$0-2], $$[$0], false);
break;
case 14: case 19:
this.$ = new yy.Select(null, $$[$0-2], $$[$0], true);
break;
case 15: case 20:
this.$ = new yy.Select(null, $$[$0-3], $$[$0-1], false, $$[$0]);
break;
case 16: case 21:
this.$ = new yy.Select(null, $$[$0-3], $$[$0-1], true, $$[$0]);
break;
case 17:
this.$ = new yy.Select($$[$0-3], $$[$0-2], $$[$0], false);
break;
case 22:
this.$ = new yy.Table($$[$0]);
break;
case 23:
this.$ = new yy.Table($$[$0-1], $$[$0]);
break;
case 24:
this.$ = new yy.Table($$[$0-2], $$[$0]);
break;
case 25: case 56: case 57: case 58: case 59: case 64:
this.$ = $$[$0-1];
break;
case 26: case 76:
this.$ = new yy.SubSelect($$[$0-1]);
break;
case 27:
this.$ = new yy.SubSelect($$[$0-2], $$[$0]);
break;
case 28:
this.$ = new yy.Table($$[$0-5], null, $$[$0-4], $$[$0-3], $$[$0-1]);
break;
case 29: case 33: case 50: case 97: case 99:
this.$ = [$$[$0]];
break;
case 30:
this.$ = $$[$0-1].concat($$[$01]);
break;
case 31:
this.$ = new yy.Union($$[$0]);
break;
case 32:
this.$ = new yy.Union($$[$0], true);
break;
case 34:
this.$ = $$[$0-1].concat($$[$0]);
break;
case 35:
this.$ = new yy.Join($$[$0-2], $$[$0]);
break;
case 36:
this.$ = new yy.Join($$[$0-2], $$[$0], 'LEFT');
break;
case 37:
this.$ = new yy.Join($$[$0-2], $$[$0], 'RIGHT');
break;
case 38:
this.$ = new yy.Join($$[$0-2], $$[$0], 'LEFT', 'INNER');
break;
case 39:
this.$ = new yy.Join($$[$0-2], $$[$0], 'RIGHT', 'INNER');
break;
case 40:
this.$ = new yy.Join($$[$0-2], $$[$0], 'LEFT', 'OUTER');
break;
case 41:
this.$ = new yy.Join($$[$0-2], $$[$0], 'RIGHT', 'OUTER');
break;
case 42:
this.$ = new yy.Where($$[$0]);
break;
case 43:
this.$ = new yy.Limit($$[$0]);
break;
case 44:
this.$ = new yy.Limit($$[$0], $$[$0-2]);
break;
case 45:
this.$ = new yy.Limit($$[$0-2], $$[$0]);
break;
case 46:
this.$ = new yy.Sample($$[$0]);
break;
case 47:
this.$ = new yy.Top($$[$0]);
break;
case 48:
this.$ = new yy.Order($$[$0]);
break;
case 49:
this.$ = new yy.Order($$[$0-1], $$[$0]);
break;
case 51: case 98: case 100:
this.$ = $$[$0-2].concat($$[$0]);
break;
case 52:
this.$ = new yy.OrderArgument($$[$0], 'ASC');
break;
case 53:
this.$ = new yy.OrderArgument($$[$0-1], $$[$0]);
break;
case 54:
this.$ = new yy.Offset($$[$0]);
break;
case 55:
this.$ = new yy.Offset($$[$0-1], $$[$0]);
break;
case 61:
this.$ = (function () {
        $$[$0-1].having = $$[$0];
        return $$[$0-1];
      }());
break;
case 62:
this.$ = new yy.Group($$[$0]);
break;
case 63:
this.$ = new yy.Having($$[$0]);
break;
case 65: case 66: case 67: case 68: case 69: case 71:
this.$ = new yy.Op($$[$0-1], $$[$0-2], $$[$0]);
break;
case 70:
this.$ = new yy.Op($$[$0-3], $$[$0-4], $$[$0-1]);
break;
case 72:
this.$ = new yy.UnaryOp($$[$0-1], $$[$0]);
break;
case 75:
this.$ = new yy.BetweenOp([$$[$0-2], $$[$0]]);
break;
case 84:
this.$ = new yy.ListValue($$[$0]);
break;
case 85:
this.$ = new yy.NumberValue($$[$0]);
break;
case 86:
this.$ = new yy.BooleanValue($$[$0]);
break;
case 87:
this.$ = new yy.ParameterValue($$[$0]);
break;
case 88:
this.$ = new yy.StringValue($$[$0], "'");
break;
case 89:
this.$ = new yy.StringValue($$[$0], '"');
break;
case 90:
this.$ = new yy.LiteralValue($$[$0]);
break;
case 91:
this.$ = new yy.LiteralValue($$[$0-2], $$[$0]);
break;
case 92:
this.$ = new yy.FunctionValue($$[$0-3], $$[$0-1]);
break;
case 93:
this.$ = new yy.FunctionValue($$[$0-2], null, true);
break;
case 94:
this.$ = new yy.FunctionValue($$[$0-3], $$[$0-1], true);
break;
case 95:
this.$ = new yy.ArgumentListValue($$[$0]);
break;
case 96:
this.$ = new yy.ArgumentListValue($$[$0], true);
break;
case 101:
this.$ = new yy.Star();
break;
case 102:
this.$ = new yy.Field($$[$0]);
break;
case 103:
this.$ = new yy.Field($$[$0-2], $$[$0]);
break;
}
},
table: [{3:1,4:2,6:3,8:4,9:5,10:6,14:7,16:$V0},{1:[3]},{5:[1,9]},o($V1,[2,2],{7:10,13:11,31:12,32:$V2,43:$V3,46:$V4}),o($V5,[2,4]),o($V5,[2,5]),o($V5,[2,6],{11:16,12:17,63:19,48:$V6,65:[1,20]}),o($V7,[2,11],{15:21,42:[1,22]}),{17:23,20:[1,24],22:25,23:34,25:$V8,30:35,37:29,47:[1,27],53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg,91:26,92:$Vh},{1:[2,1]},o($V1,[2,3],{31:48,32:$V2}),o($V5,[2,10]),o($Vi,[2,29]),{30:49,82:$Va},{30:50,82:$Va},{6:51,8:4,9:5,10:6,14:7,16:$V0,33:[1,52]},o($V5,[2,7]),o($V5,[2,8],{11:53,48:$V6}),{49:[1,54]},o($Vj,[2,60],{64:55,67:[1,56]}),{49:[1,57]},o($V7,[2,12]),{23:34,25:$V8,30:35,37:58,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{18:[1,59],44:$Vk},{17:61,23:34,25:$V8,30:35,37:29,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg,91:26,92:$Vh},{17:62,20:[1,63],23:34,25:$V8,30:35,37:29,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg,91:26,92:$Vh},o($Vl,[2,99]),{30:64,82:$Va},o($Vl,[2,101]),o($Vl,[2,102],{24:[1,65],68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),{4:72,6:3,8:4,9:5,10:6,14:7,16:$V0,23:34,25:$V8,30:35,37:71,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},o($Vr,[2,74],{74:[1,73]}),{25:[1,75],75:74},o($Vr,[2,73]),o($Vs,[2,77],{88:$Vt}),o($Vs,[2,78]),o($Vs,[2,79]),o($Vs,[2,80]),o($Vs,[2,81]),o($Vs,[2,82]),o($Vs,[2,83]),o([5,18,24,27,32,35,38,39,42,43,44,45,46,48,54,65,67,68,69,70,71,73,74,88],$Vu,{25:[1,77]}),o([5,18,20,24,25,27,32,35,38,39,42,43,44,45,46,48,54,57,58,65,67,68,69,70,71,73,74,76,82,83,84,85,86,87,89,92],[2,85]),o($Vs,[2,88]),o($Vs,[2,89]),{25:[1,78]},o($Vs,[2,86]),o($Vs,[2,87]),o($Vi,[2,30]),o($V5,[2,43],{44:[1,79],45:[1,80]}),o($V5,[2,46]),o($Vi,[2,31],{13:11,43:$V3,46:$V4}),{6:81,8:4,9:5,10:6,14:7,16:$V0},o($V5,[2,9]),{23:34,30:35,50:82,52:83,53:84,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},o($Vj,[2,61]),{23:34,25:$V8,30:35,37:85,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{23:34,25:$V8,30:35,37:87,53:31,66:86,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},o($V7,[2,42],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),{19:88,23:89,25:$Vv,87:$Vw},{23:34,25:$V8,30:35,37:29,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg,91:92,92:$Vh},{18:[1,93],44:$Vk},{18:[1,94],44:$Vk},{17:95,23:34,25:$V8,30:35,37:29,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg,91:26,92:$Vh},o([20,25,76,82,83,84,85,86,87,89,92],[2,47]),{23:96,87:$Vw},{23:34,25:$V8,30:35,37:97,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{23:34,25:$V8,30:35,37:98,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{23:34,25:$V8,30:35,37:99,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{23:34,25:$V8,30:35,37:101,53:31,72:100,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{23:34,25:$V8,30:35,37:102,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{27:[1,103],68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq},{27:[1,104]},{25:[1,105],75:106},o($Vr,[2,72]),{4:72,6:3,8:4,9:5,10:6,14:7,16:$V0},{87:[1,107]},{20:$Vx,23:34,25:$V8,27:[1,108],30:35,37:87,53:31,66:110,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg,90:109},{20:$Vx,23:34,25:$V8,30:35,37:87,53:31,66:110,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg,90:112},{30:113,82:$Va},{30:114,82:$Va},o($Vi,[2,32],{13:11,43:$V3,46:$V4}),o($V5,[2,48],{51:115,44:[1,116],45:[1,117]}),o($Vy,[2,50]),o($Vy,[2,52],{54:[1,118]}),o($Vj,[2,63],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),o([5,27,32,43,46,48,67],[2,62],{44:$Vz}),o($VA,[2,97],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),o($VB,[2,13],{21:120,34:121,35:$VC,38:$VD,39:$VE}),o($VF,[2,22],{23:125,24:[1,126],28:[1,127],87:$Vw,88:$Vt}),{4:129,6:3,8:4,9:5,10:6,14:7,16:$V0,23:34,25:$V8,26:128,30:35,37:87,53:31,66:130,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},o([5,18,24,27,28,32,35,36,38,39,42,43,44,46,48,65,87,88],$Vu),o($Vl,[2,100]),{19:131,23:89,25:$Vv,87:$Vw},{19:132,23:89,25:$Vv,87:$Vw},{18:[1,133],44:$Vk},o($Vl,[2,103],{88:$Vt}),o([5,18,24,27,32,35,38,39,42,43,44,46,48,65,67,68,70,73],[2,65],{69:$Vn,71:$Vp}),o([5,18,24,27,32,35,38,39,42,43,44,46,48,65,67,68,69,70,73],[2,66],{71:$Vp}),o([5,18,24,27,32,35,38,39,42,43,44,46,48,65,67,70,73],[2,67],{68:$Vm,69:$Vn,71:$Vp}),o($Vr,[2,68]),{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:[1,134]},o($VG,[2,69],{68:$Vm,69:$Vn,70:$Vo,71:$Vp}),o($Vr,[2,64]),o($Vr,[2,76]),{4:72,6:3,8:4,9:5,10:6,14:7,16:$V0,23:34,25:$V8,26:135,30:35,37:87,53:31,66:130,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},o($Vr,[2,71]),o([5,18,24,27,28,32,35,36,38,39,42,43,44,45,46,48,54,65,67,68,69,70,71,73,74,87,88],[2,91]),o($Vs,[2,93]),{27:[1,136]},{27:[2,95],44:$Vz},{23:34,25:$V8,30:35,37:87,53:31,66:137,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{27:[1,138]},o($V5,[2,44]),o($V5,[2,45]),o($V5,[2,49]),{23:34,30:35,52:139,53:84,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{30:141,55:140,82:$Va},o($Vy,[2,53]),{23:34,30:35,53:142,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},o($VB,[2,15],{34:143,35:$VC,38:$VD,39:$VE}),o($VH,[2,33]),{19:144,23:89,25:$Vv,87:$Vw},{35:[1,145],40:[1,146],41:[1,147]},{35:[1,148],40:[1,149],41:[1,150]},o($VF,[2,23],{88:$Vt}),{23:151,87:$Vw},{29:[1,152]},{27:[1,153]},{27:[1,154]},{27:[2,84],44:$Vz},o($VB,[2,14],{34:121,21:155,35:$VC,38:$VD,39:$VE}),o($VB,[2,17],{34:121,21:156,35:$VC,38:$VD,39:$VE}),{19:157,23:89,25:$Vv,87:$Vw},{23:34,25:$V8,30:35,37:158,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{27:[1,159]},o($Vs,[2,94]),{27:[2,96],44:$Vz},o($Vs,[2,92]),o($Vy,[2,51]),o($V5,[2,54],{56:160,59:[1,161]}),{57:[1,162],58:[1,163]},o($VA,[2,98]),o($VH,[2,34]),{36:[1,164]},{19:165,23:89,25:$Vv,87:$Vw},{35:[1,166]},{35:[1,167]},{19:168,23:89,25:$Vv,87:$Vw},{35:[1,169]},{35:[1,170]},o($VF,[2,24],{88:$Vt}),{25:[1,171]},o($VF,[2,25]),o($VF,[2,26],{23:172,87:$Vw}),o($VB,[2,16],{34:143,35:$VC,38:$VD,39:$VE}),o($VB,[2,20],{34:143,35:$VC,38:$VD,39:$VE}),o($VB,[2,19],{34:121,21:173,35:$VC,38:$VD,39:$VE}),o($VG,[2,75],{68:$Vm,69:$Vn,70:$Vo,71:$Vp}),o($Vr,[2,70]),o($V5,[2,55]),{60:[1,174],62:[1,175]},o($VI,[2,56]),o($VI,[2,57]),{23:34,25:$V8,30:35,37:176,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{36:[1,177]},{19:178,23:89,25:$Vv,87:$Vw},{19:179,23:89,25:$Vv,87:$Vw},{36:[1,180]},{19:181,23:89,25:$Vv,87:$Vw},{19:182,23:89,25:$Vv,87:$Vw},{30:183,82:$Va},o($VF,[2,27],{88:$Vt}),o($VB,[2,21],{34:143,35:$VC,38:$VD,39:$VE}),{30:141,55:184,82:$Va},{30:141,55:185,82:$Va},o($VH,[2,35],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),{23:34,25:$V8,30:35,37:186,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{36:[1,187]},{36:[1,188]},{23:34,25:$V8,30:35,37:189,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{36:[1,190]},{36:[1,191]},{27:[1,192]},{61:[1,193]},{61:[1,194]},o($VH,[2,36],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),{23:34,25:$V8,30:35,37:195,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{23:34,25:$V8,30:35,37:196,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},o($VH,[2,37],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),{23:34,25:$V8,30:35,37:197,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},{23:34,25:$V8,30:35,37:198,53:31,75:33,76:$V9,77:36,78:37,79:38,80:39,81:40,82:$Va,83:$Vb,84:$Vc,85:$Vd,86:$Ve,87:$Vf,89:$Vg},o($VF,[2,28]),o($V5,[2,58]),o($V5,[2,59]),o($VH,[2,38],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),o($VH,[2,40],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),o($VH,[2,39],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq}),o($VH,[2,41],{68:$Vm,69:$Vn,70:$Vo,71:$Vp,73:$Vq})],
defaultActions: {9:[2,1]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    for (var k in this.yy) {
        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
            sharedState.yy[k] = this.yy[k];
        }
    }
    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);
    var ranges = lexer.options && lexer.options.ranges;
    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    _token_stack:
        function lex() {
            var token;
            token = lexer.lex() || EOF;
            if (typeof token !== 'number') {
                token = self.symbols_[token] || token;
            }
            return token;
        }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(lexer.yytext);
            lstack.push(lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                sharedState.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}